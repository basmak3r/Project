@model EngineersMatrimony.Models.Preference

@{
    Layout = "~/Views/Shared/_RegistrationLayout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-style-10 m-2">
        <h1>Engineers Matrimony<span>Add Your Preference!</span></h1>
        <form>
            <p>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </p>
           
                <div class="section"><span>6</span><h4>Preferencess</h4></div>
                <div class="inner-wrap">
                    <label>
                        Age
                        <div class="form-row">
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.AgeFrom, new { htmlAttributes = new { @class = "form-control", @placeholder = "From" } })
                                @Html.ValidationMessageFor(model => model.AgeFrom, "", new { @class = "text-danger" })
                            </div>

                            @*@Html.LabelFor(model => model.AgeTo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.AgeTo, new { htmlAttributes = new { @class = "form-control", @placeholder = "To" } })
                                @Html.ValidationMessageFor(model => model.AgeTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </label>
                    <label>
                        Height
                        <div class="form-row">
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.HeightFrom, new { htmlAttributes = new { @class = "form-control", @placeholder = "From" } })
                                @Html.ValidationMessageFor(model => model.HeightFrom, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.HeightTo, new { htmlAttributes = new { @class = "form-control", @placeholder = "To" } })
                                @Html.ValidationMessageFor(model => model.HeightTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </label>
                    <label>
                        Weight
                        <div class="form-row">
                            <div class="col-md-3 ">
                                @Html.EditorFor(model => model.WeightFrom, new { htmlAttributes = new { @class = "form-control", @placeholder = "From" } })
                                @Html.ValidationMessageFor(model => model.WeightFrom, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 ">
                                @Html.EditorFor(model => model.WeightTo, new { htmlAttributes = new { @class = "form-control", @placeholder = "To" } })
                                @Html.ValidationMessageFor(model => model.WeightTo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </label>
                    <label>
                        Annual Income
                        <div class="form-row">
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.IncomeFrom, new { htmlAttributes = new { @class = "form-control", @placeholder = "From" } })
                                @Html.ValidationMessageFor(model => model.IncomeFrom, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.IncomeTo, new { htmlAttributes = new { @class = "form-control", @placeholder = "To" } })
                                @Html.ValidationMessageFor(model => model.IncomeTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </label>
                    <label>
                        Job
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Job, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger" })
                        </div>
                    </label>
                    <label>
                        Marital Status
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.MaritalStatus, (IEnumerable<SelectListItem>)ViewBag.MStatus, htmlAttributes: new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                        </div>
                    </label>
                    <label>
                        Family Type
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.FamilyType, (IEnumerable<SelectListItem>)ViewBag.FamType, htmlAttributes: new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.FamilyType, "", new { @class = "text-danger" })
                        </div>
                    </label>
                    <label>
                        District
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.District, (IEnumerable<SelectListItem>)ViewBag.Districts, htmlAttributes: new { @class = "form-select" })
                            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                        </div>
                    </label>
                    <label>
                        Gender
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.Gender, (IEnumerable<SelectListItem>)ViewBag.Genders, htmlAttributes: new { @class = "form-select" })
                            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </label>

                </div>


                <div class="button-section">
                    <input type="submit" value="Add" class="btn btn-default" />

                </div>


        </form>
    </div>
























   
}




